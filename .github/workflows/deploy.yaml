name : Deploy Backend to ECR & EC2

on:
  push:
    branches:
      - main 
      - feature

jobs:
  build-and-push:

    runs-on: ubuntu-latest

    steps:
      - name : Checkout repo
        uses : actions/checkout@v3

      - name : Configure AWS CLI
        uses : aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name : Login to Amazon ECR
        run : |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      - name : Determine environment
        run: |
          if [[ ${{ github.ref }} == refs/heads/main ]]; then
            echo "NODE_ENV=production" >> $GITHUB_ENV
            echo "DB_HOST=${{ secrets.DB_HOST_PROD }}" >> $GITHUB_ENV
            echo "CORS_ORIGIN=${{ secrets.CORS_ORIGIN_PROD }}" >> $GITHUB_ENV

          else
            echo "NODE_ENV=development" >> $GITHUB_ENV
            echo "DB_HOST=${{ secrets.DB_HOST_DEV }}" >> $GITHUB_ENV
            echo "CORS_ORIGIN=${{ secrets.CORS_ORIGIN_DEV }}" >> $GITHUB_ENV
          fi
            echo "IMAGE_TAG=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV


      - name : Build Docker image
        run : |
          docker build \
            --build-arg NODE_ENV=$NODE_ENV \
            --build-arg DB_HOST=$DB_HOST \
            --build-arg DB_USER=${{ secrets.DB_USER }} \
            --build-arg DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            --build-arg DB_NAME=${{ secrets.DB_NAME }} \
            --build-arg AWS_REGION=${{ secrets.AWS_REGION }} \
            --build-arg AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            --build-arg AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            --build-arg AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }} \
            --build-arg CORS_ORIGIN=${{ secrets.CORS_ORIGIN }} \
            --build-arg SESSION_SECRET=${{ secrets.SESSION_SECRET }} \
            -t ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY_NAME }}:$IMAGE_TAG .

          docker tag ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPO_NAME }}:$IMAGE_TAG \
            ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPO_NAME}}:$NODE_ENV-latest

      - name : Push Docker image to ECR
        run : |
          docker push ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY_NAME }}:$IMAGE_TAG
          docker push ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY_NAME }}:$NODE_ENV-latest

          
